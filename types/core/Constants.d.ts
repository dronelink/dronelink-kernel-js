import { MotionLimits6 } from "./MotionLimits6";
import { Limits } from "./Limits";
import { CameraSpecification } from "./CameraSpecification";
import { MotionLimits3 } from "./MotionLimits3";
import { Orientation3Optional } from "./Orientation3Optional";
export declare class Constants {
    static readonly Version = "2.2.0";
    static readonly ExecuteIntervalTarget: number;
    static readonly ExecuteIntervalMax: number;
    static readonly ExecuteDelayStrikesMax = 5;
    static readonly SimulationUpdateInterval: number;
    static readonly DroneConnectionLatency: number;
    static DroneMotionLimits: {
        Generic: () => MotionLimits6;
        Conservative: () => MotionLimits6;
        Max: () => MotionLimits6;
    };
    static DroneOrientationLimits: {
        Yaw: Limits;
    };
    static GimbalLimits: {
        Pitch: Limits;
        Roll: Limits;
        Yaw: Limits;
    };
    static GimbalMotionLimits: MotionLimits3;
    static CameraSpecifications: CameraSpecification[];
    static CameraSpecification: (id: any) => CameraSpecification;
    static readonly MissionReengagementAltitudeRange: number;
    static readonly MissionReengagementMinAltitude: number;
    static readonly MissionReengagementTakeoffAltitude: number;
    static readonly MissionReengagementMinRampVelocity: number;
    static readonly ComponentElevationTolerance = 1;
    static readonly ComponentDyanmicHomeLocationUpdateFrequency = 5;
    static readonly PlanComponentTakeoffDistanceHorizontal: number;
    static readonly DroneMotionComponentGimbalOrientation: Orientation3Optional;
    static readonly DroneMotionComponentModelSampleTimeMax = 2;
    static readonly DroneMotionComponentErrorK: number;
    static readonly DroneMotionErrorToleranceHorizontal: number;
    static readonly DroneMotionErrorToleranceVertical: number;
    static readonly DestinationComponentHeadingAchievement: number;
    static readonly DestinationComponentEstimateSampleDistance = 1;
    static readonly DestinationComponentAchievementTime = 4;
    static readonly DestinationComponentAchievementDistanceHorizontal: number;
    static readonly DestinationComponentAchievementDistanceVertical: number;
    static readonly DestinationComponentAltitude: number;
    static readonly DestinationComponentAltitudeRange: number;
    static readonly DestinationComponentRestrictionZoneCornerRadius: number;
    static readonly DestinationComponentSampleDistance = 0.3;
    static readonly DestinationComponentRestrictionZoneExitMinAltitude: number;
    static readonly CourseComponentAchievementDistance: number;
    static readonly FacadeComponentDistance: number;
    static readonly FacadeComponentMinCaptureInterval = 2;
    static readonly FacadeComponentFrontOverlap = 0.5;
    static readonly FacadeComponentSideOverlap = 0.5;
    static readonly FacadeComponentGimbalPitch: number;
    static readonly FacadeComponentInitialAltitude: number;
    static readonly FacadeComponentFinalAltitude: number;
    static readonly FacadeComponentCornerRadius: number;
    static readonly FacadeComponentOrbitSteps = 360;
    static readonly FacadeComponentSampleDistanceMax = 0.3;
    static readonly FacadeComponentSampleDistanceMin = 0.1;
    static readonly FacadeGimbalPitchLimits: Limits;
    static readonly HeadingComponentAchievementTime = 1;
    static readonly HeadingComponentAchievementDistance: number;
    static readonly InspectionComponentAchievementTime = 3;
    static readonly InspectionComponentAchievementDistanceHorizontal: number;
    static readonly InspectionComponentAchievementDistanceVertical: number;
    static readonly InspectionComponentOrientationDistanceHorizontal: number;
    static readonly InspectionComponentOrientationDistanceVertical: number;
    static readonly InspectionComponentOrientationTimeMax = 3;
    static readonly InspectionComponentActionDroneOrientationCompatibilityThreshold: number;
    static readonly InspectionComponentOrientationDroneThreshold: number;
    static readonly InspectionComponentOrientationGimbalThreshold: number;
    static readonly InspectionComponentAltitudeRange: number;
    static readonly MapComponentMaxHorizontalVelocity: number;
    static readonly MapComponentMinCaptureInterval = 2;
    static readonly MapComponentFrontOverlap = 0.8;
    static readonly MapComponentSideOverlap = 0.7;
    static readonly MapComponentGimbalPitch: number;
    static readonly MapComponentBaseAccelerationMultiplier = 0.5;
    static readonly MapComponentBaseDistanceMin: number;
    static readonly MapComponentSampleDistance = 0.3;
    static readonly MapComponentMinimumTargetDistance: number;
    static readonly MapComponentTerrainFollowGranularity = 30;
    static readonly MapCameraSpecification: CameraSpecification;
    static readonly MapGimbalPitchLimits: Limits;
    static readonly OrbitComponentEstimateSampleDistance = 1;
    static readonly OrbitComponentSampleDistance = 0.3;
    static readonly PathComponentCornerRadius: number;
    static readonly PathComponentModelSampleDistance = 0.3;
    static readonly PathComponentModelSampleDistancePosition = 1;
    static readonly PlanRestrictionZoneMinApplicableProximityHorizontal: number;
    static readonly PlanRestrictionZoneMinApplicableProximityVertical: number;
    static readonly RotationComponentVelocity: number;
    static readonly RotationComponentDistance: number;
    static readonly RotationComponentVelocityMin: number;
    static readonly RotationAchievementDistance: number;
    static readonly WaitComponentTime = 1;
    static readonly VelocityHorizontalDampenThreshold = 2;
    static readonly VelocityVerticalDampenThreshold = 2;
    static readonly VelocityRotationalDampenThreshold: number;
    static readonly LowBatteryWarningThresholdDroneCommandValue = 0.2;
    static readonly SeriousLowBatteryWarningThresholdDroneCommand = 0.1;
    static readonly ReturnHomeAltitudeDroneCommandValue: number;
    static readonly MaxAltitudeDroneCommandValue: number;
    static readonly MaxDistanceDroneCommandValue: number;
    static readonly PhotoIntervalCommandValue = 2;
    static readonly ZoneMaxAltitude: number;
    static readonly ZoneEdgeBufferDistance = 0.1;
}
