import { Serializable } from "../core/Serializable";
import { Component } from "./Component";
import { SubComponent } from "./SubComponent";
import { TypeName, PlanCompleteAction, ExecutionEngine } from "../core/Enums";
import { ComponentExecuteContext } from "./ComponentExecuteContext";
import { ComponentExecutionState } from "./ComponentExecutionState";
import { ComponentNode } from "./ComponentNode";
import { ComponentEstimate } from "./ComponentEstimate";
import { Vector2 } from "../core/Vector2";
import { DistanceTolerance } from "../core/DistanceTolerance";
import { MotionLimits6 } from "../core/MotionLimits6";
import { Node } from "../core/Node";
import { GeoSpatial } from "../core/GeoSpatial";
import { ComponentEstimateContext } from "./ComponentEstimateContext";
import { GeoCoordinate } from "../core/GeoCoordinate";
import { PlanRestrictionZone } from "./PlanRestrictionZone";
import { PlanReengagementRules } from "./PlanReengagementRules";
import { UserInterfaceSettings } from "../core/UserInterfaceSettings";
import { MotionLimits6Optional } from "../core/MotionLimits6Optional";
import { ComponentContext } from "./ComponentContext";
import { Context, Message } from "..";
import { EngagementParameters } from "../core/Engagement";
import { CameraSpecification } from "../core/CameraSpecification";
export declare class PlanComponent extends Component implements Serializable {
    readonly type = TypeName.PlanComponent;
    takeoffOffset: Vector2 | null;
    takeoffDistance: DistanceTolerance;
    droneMotionLimits: MotionLimits6;
    droneMotionErrorTolerance: DistanceTolerance;
    droneMotionErrorLimits: MotionLimits6Optional | null;
    ultrasonicAltitudeMin: number | null;
    rootComponent: SubComponent;
    restrictionZones: PlanRestrictionZone[];
    altitudeContinuity: Boolean;
    reengagementRules: PlanReengagementRules;
    completeAction: PlanCompleteAction;
    userInterfaceSettings: UserInterfaceSettings | null;
    engagementParameters: EngagementParameters | null;
    applyJSON(json: any): void;
    validate(): void;
    get executionEngines(): ExecutionEngine[];
    verification(context: ComponentContext): Component | null;
    toComponentForExecutionEngine(executionEngine: ExecutionEngine, context: ComponentContext): Component | null;
    cameraCaptureConfigurationsEnabled(context?: ComponentExecuteContext | null): boolean;
    get referenceOffsets(): Vector2[];
    get requiredTakeoffCoordinate(): GeoCoordinate | null;
    get takeoffCoordinate(): GeoCoordinate;
    elevationCoordinates(context: ComponentContext): GeoCoordinate[];
    boundsCoordinates(context: ComponentContext): GeoCoordinate[];
    get context(): ComponentContext;
    node(parent?: Node | null): ComponentNode;
    get firstCameraSpecification(): CameraSpecification | null;
    updateCameraSpecifications(cameraSpecification: CameraSpecification): void;
    estimate(context: ComponentEstimateContext, start: GeoSpatial): ComponentEstimate;
    execute(context: ComponentExecuteContext): ComponentExecutionState;
    engageDisallowedReasons(context: Context): Message[];
}
